<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\daniel\Documents\open-source\nLess\build\\dotless.Test.dll" total="60" errors="0" failures="0" not-run="2" inconclusive="0" ignored="2" skipped="0" invalid="0" date="2010-02-02" time="18:31:27">
  <environment nunit-version="2.5.2.9222" clr-version="2.0.50727.4927" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Users\daniel\Documents\open-source\nLess\build" machine-name="TIG" user="daniel" user-domain="Tig" />
  <culture-info current-culture="de-AT" current-uiculture="de-DE" />
  <test-suite name="C:\Users\daniel\Documents\open-source\nLess\build\\dotless.Test.dll" executed="True" success="True" time="1.225" asserts="0">
    <results>
      <test-suite name="dotless" executed="True" success="True" time="1.216" asserts="0">
        <results>
          <test-suite name="Test" executed="True" success="True" time="1.207" asserts="0">
            <results>
              <test-suite name="PointInTime" executed="True" success="True" time="0.240" asserts="0">
                <results>
                  <test-suite name="PointInTimeFixture" executed="True" success="True" time="0.240" asserts="0">
                    <results>
                      <test-case name="dotless.Test.PointInTime.PointInTimeFixture.AltEngine_Parse_Test_Data" executed="True" success="True" time="0.182" asserts="0" />
                      <test-case name="dotless.Test.PointInTime.PointInTimeFixture.Expression_Eval_Benchmark" executed="True" success="True" time="0.050" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Spec" executed="True" success="True" time="0.388" asserts="0">
                <results>
                  <test-suite name="ExtensibleEngine" executed="True" success="True" time="0.386" asserts="0">
                    <results>
                      <test-suite name="SpecEngine" executed="True" success="True" time="0.386" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.CantMixVariableContexts" executed="True" success="True" time="0.014" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.CantWorkWithDoublesInNumbers" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldEvaluateVariablesLazily" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldGroupSelectorsWhenItCan" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldHandleComplexColorOperations" executed="True" success="True" time="0.019" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldHandleSomeFunctions" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldManageNamespacedMixins" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldManageScope" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldManageStrings" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldManageVariables" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldManageWhitespace" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldMergeSameElement" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseABigFile" executed="True" success="True" time="0.283" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseAccessors" executed="True" success="True" time="0.018" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseComments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseCss" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseCss3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseMixins" executed="False">
                            <reason>
                              <message><![CDATA[Upcoming functionality]]></message>
                            </reason>
                          </test-case>
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseMixinsWithArguments" executed="False">
                            <reason>
                              <message><![CDATA[Upcoming functionality]]></message>
                            </reason>
                          </test-case>
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseNestedRules" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldParseOperations" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="dotless.Test.Spec.ExtensibleEngine.SpecEngine.ShouldWorkWithImport" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Unit" executed="True" success="True" time="0.577" asserts="0">
                <results>
                  <test-suite name="configuration" executed="True" success="True" time="0.022" asserts="0">
                    <results>
                      <test-suite name="XmlConfigurationFixture" executed="True" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.CacheIsEnabledByDefault" executed="True" success="True" time="0.012" asserts="1" />
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.MinifyCssAttributeCanBeFalseSetsMinifyOutputFalse" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.MinifyCssAttributeCanBeNull_SetsMinifyOutputFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.ReadsCachingFromXmlNodeSetsCachingFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.ReadsCachingFromXmlNodeSetsCachingTrue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.configuration.XmlConfigurationFixture.ReadsMinificationFromXmlNodeSetsMinifyOutputTrue" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ConsoleRunner" executed="True" success="True" time="0.167" asserts="0">
                    <results>
                      <test-suite name="CompilerFixture" executed="True" success="True" time="0.167" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.ConsoleRunner.CompilerFixture.TransformsFileCorrectly" executed="True" success="True" time="0.167" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="engine" executed="True" success="True" time="0.029" asserts="0">
                    <results>
                      <test-suite name="AltEngineFixture" executed="True" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Can_Retrieve_Css_Dom" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Css_Dom_Should_Contain_Five_Elements_For_Nested_Element_With_Props" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Css_Dom_Should_Contain_Four_Elements_For_Nested_Element_With_Props" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Css_Dom_Should_Contain_One_Elements_For_Nested_Element_With_No_Props" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Css_Dom_Should_Contain_Two_Elements_For_CSV_Props" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.AltEngineFixture.Css_Dom_Should_Contain_Two_Elements_For_Nested_Element_With_Props" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CssNodes" executed="True" success="True" time="0.004" asserts="0">
                        <results>
                          <test-suite name="CssElementFixture" executed="True" success="True" time="0.002" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.CssNodes.CssElementFixture.Can_Get_And_Set_Values" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="dotless.Test.Unit.engine.CssNodes.CssElementFixture.Cannot_AddProperties_Twice_Get_And_Set_Values" executed="True" success="True" time="0.002" asserts="1" />
                              <test-case name="dotless.Test.Unit.engine.CssNodes.CssElementFixture.Equal_Properties_Grouped_Correctly" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="CssPropertyFixture" executed="True" success="True" time="0.001" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.CssNodes.CssPropertyFixture.Can_Get_And_Set_Property_Values" executed="True" success="True" time="0.001" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ElementFixture" executed="True" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.engine.ElementFixture.CanAddSubElements" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.ElementFixture.CanInstansiateElement" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Unit.engine.ElementFixture.CanRetrieveElementPath" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Literals" executed="True" success="True" time="0.009" asserts="0">
                        <results>
                          <test-suite name="ColorFixture" executed="True" success="True" time="0.006" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanAddToRgbColor" executed="True" success="True" time="0.002" asserts="9" />
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanDivideRgbColors" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanMinusFromRgbColor" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanMultiplyRgbColors" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanNormailzeRgb" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="dotless.Test.Unit.engine.Literals.ColorFixture.CanRetrieveColorHex" executed="True" success="True" time="0.001" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="FontFamilyFixture" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.Literals.FontFamilyFixture.CanGetCss" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="NumberFixture" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.Literals.NumberFixture.CanOperateOnNumber" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="StringFixture" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="dotless.Test.Unit.engine.Literals.StringFixture.CanRetrieveStringContent" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="PropertyFixture" executed="True" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.engine.PropertyFixture.CanEvaluateColorProperties" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.PropertyFixture.CanEvaluateExpressionNumberProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.engine.PropertyFixture.CanEvaluateSeveralPropertiesWithoutOperators" executed="True" success="True" time="0.002" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Handler" executed="True" success="True" time="0.351" asserts="0">
                    <results>
                      <test-suite name="HandlerFixture" executed="True" success="True" time="0.351" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Handler.HandlerFixture.LoadsFileThroughSource" executed="True" success="True" time="0.342" asserts="0" />
                          <test-case name="dotless.Test.Unit.Handler.HandlerFixture.RetrievesPathFromRequest" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="dotless.Test.Unit.Handler.HandlerFixture.WritesEngineOutputToResponse" executed="True" success="True" time="0.006" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="utils" executed="True" success="True" time="0.001" asserts="0">
                    <results>
                      <test-suite name="RegexExtentionsFixtures" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.utils.RegexExtentionsFixtures.CanRetrieveIdents" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="wiring" executed="True" success="True" time="0.004" asserts="0">
                    <results>
                      <test-suite name="Wiring" executed="True" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.wiring.Wiring.CoreConfigExposesFileSource" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="dotless.Test.Unit.wiring.Wiring.HandlerUsesByDefaultAspServerPathProvider" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>